[package]
name = "stratosort"
version = "0.1.0"
description = "AI-powered file organization"
authors = ["StratoSort Team"]
edition = "2021"
rust-version = "1.75"
default-run = "stratosort-app"

[lib]
name = "stratosort"
crate-type = ["lib", "cdylib"]

[[bin]]
name = "stratosort-app"
path = "src/main.rs"

[[bin]]
name = "stratosort-cli"
path = "src/bin/stratosort-cli.rs"

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
# Core Tauri
tauri = { version = "2", features = [] }
tauri-plugin-fs = "2"
tauri-plugin-dialog = "2"
tauri-plugin-shell = "2"
tauri-plugin-store = "2"
tauri-plugin-notification = "2"
tauri-plugin-global-shortcut = "2"
tauri-plugin-clipboard-manager = "2"
tauri-plugin-process = "2"
tauri-plugin-os = "2"
tauri-plugin-window-state = "2"
tauri-plugin-positioner = "2"
tauri-plugin-http = "2"

# Community plugins (limited due to GTK linking conflicts)
# Note: sentry-tauri and other plugins have linking conflicts with current Tauri setup
# Error tracking implemented via custom solution instead
# Note: Some plugins have GTK linking conflicts with existing Tauri plugins
# These will be added in future updates when compatible versions are available
# tauri-plugin-context-menu = "0.8"
# tauri-plugin-nosleep = "0.1"

# Async runtime
tokio = { version = "1", features = ["rt-multi-thread", "macros", "fs", "io-util", "sync", "time", "process"] }
tokio-util = "0.7"
futures = "0.3"
async-trait = "0.1"

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# HTTP client for update checking
reqwest = { version = "0.12", features = ["json"] }
url = "2.5"

# Error handling
anyhow = "1"
thiserror = "1"

# Environment configuration
dotenv = "0.15"

# Database & Embeddings
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "sqlite", "chrono"] }
libsqlite3-sys = { version = "*", features = ["bundled"] }
# Modern vector search with sqlite-vec
sqlite-vec = "0.1.6"
zerocopy = "0.7" # For efficient vector byte conversion

# AI Integration
ollama-rs = "0.3"

# Random number generation for retry jitter
rand = "0.8"

# Hashing for duplicate detection
sha2 = "0.10"

# File system watching for real-time organization
notify = { version = "6", features = ["crossbeam-channel"] }
crossbeam-channel = "0.5"
# candle-core = "0.7"
# candle-nn = "0.7"
# candle-transformers = "0.7"
# ort = { version = "2.0.0-rc.10", optional = true }  # Disable for now

# File processing - Documents & Text
pdf-extract = { version = "0.7", optional = true }  # Basic PDF text extraction
lopdf = { version = "0.33", optional = true }       # Advanced PDF manipulation (updated)
docx-rs = { version = "0.4", optional = true }      # Microsoft Word document processing
# docx crate removed - using docx-rs instead
# odf crate doesn't exist - consider calamine for spreadsheets, no direct ODF support
rtf-parser = { version = "0.1", optional = true }   # RTF parsing
calamine = { version = "0.26", optional = true }    # Excel files (xlsx, xls, ods)
csv = { version = "1.3", optional = true }          # CSV file processing
xml-rs = { version = "0.8", optional = true }       # XML document parsing
quick-xml = { version = "0.36", optional = true }   # Fast XML parser
html5ever = { version = "0.27", optional = true }   # HTML parsing
markup5ever = { version = "0.12", optional = true } # Markup utilities
# scraper = { version = "0.20", optional = true }     # HTML scraping - removed due to fxhash security advisory
pulldown-cmark = { version = "0.11", optional = true } # Markdown parsing
comrak = { version = "0.26", optional = true }      # CommonMark + GFM
yaml-rust = { version = "0.4", optional = true }    # YAML file parsing
toml = { version = "0.8", optional = true }         # TOML configuration files
serde_yaml = { version = "0.9", optional = true }   # YAML with serde support
json5 = { version = "0.4", optional = true }        # JSON5 format support

# File processing - Images & Media
image = { version = "0.25", features = ["jpeg", "png"], default-features = false }
imageproc = { version = "0.25", optional = true }   # Advanced image processing
fast_image_resize = { version = "4.2", optional = true } # High-performance resizing (updated)
webp = { version = "0.3", optional = true }         # WebP format support
# avif-decode = { version = "0.2", optional = true }  # AVIF support - removed due to security advisory in owning_ref
kamadak-exif = { version = "0.5", optional = true } # EXIF metadata extraction
rexif = { version = "0.7", optional = true }        # Alternative EXIF parser
# OCR dependencies
tesseract = { version = "0.15", optional = true }   # OCR - requires system tesseract
leptess = { version = "0.14", optional = true }     # OCR - requires system leptonica/tesseract

# File processing - Archives & Compression
zip = { version = "2.2", optional = true }          # ZIP archive support (updated)
tar = { version = "0.4", optional = true }          # TAR archive support
flate2 = { version = "1.0", optional = true }       # GZIP compression
bzip2 = { version = "0.4", optional = true }        # BZIP2 compression
xz2 = { version = "0.1", optional = true }          # XZ/LZMA compression
sevenz-rust = { version = "0.6", optional = true }  # 7-Zip archive support
unrar = { version = "0.5", optional = true }        # RAR archive support

# File processing - Audio & Video Metadata
mp4parse = { version = "0.17", optional = true }    # MP4 video metadata
id3 = { version = "1.14", optional = true }         # MP3 ID3 tags (updated)
metaflac = { version = "0.2", optional = true }     # FLAC metadata
audiotags = { version = "0.5", optional = true }    # Universal audio metadata
ffmpeg-next = { version = "7.0", optional = true }  # Video/audio processing
symphonia = { version = "0.5", features = ["all"], optional = true } # Pure Rust audio

# File processing - Other formats
infer = "0.16"                                   # File type detection by magic numbers
tree_magic_mini = "3.1"                          # MIME type detection
mime_guess = "2"                                 # MIME type guessing from extensions
encoding_rs = "0.8"                              # Text encoding detection and conversion
chardet = "0.2"                                  # Character encoding detection
content_inspector = "0.2"                        # Binary vs text file detection

# Large file processing & streaming
async-stream = { version = "0.3", optional = true }  # Async streaming utilities
futures-util = { version = "0.3", optional = true }  # Future utilities for streaming
memmap2 = { version = "0.9", optional = true }      # Memory-mapped file I/O
tempfile = "3.14"                                    # Temporary file management (updated)

# Utils
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1", features = ["v4", "serde"] }
walkdir = "2"

# Performance optimizations for StratoSort workflow
dashmap = "5.5"      # Concurrent caching for <50ms responses
blake3 = "1.5"       # Fast hashing for file change detection
parking_lot = "0.12" # Faster locks for better concurrency
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
directories = "5"
dirs = "5"
bytesize = "1"
sysinfo = "0.32"  # System information
regex = "1"  # Regular expressions
base64 = "0.22"  # Base64 encoding for backup data

# CLI dependencies
clap = { version = "4", features = ["derive"] }

[features]
default = ["custom-protocol", "sysinfo", "multimedia-core"]
custom-protocol = ["tauri/custom-protocol"]
rusqlite-init = []  # Alternative rusqlite initialization method

# Document processing features
documents = [
    "pdf-extract", "lopdf", "docx-rs", "rtf-parser",
    "calamine", "csv", "xml-rs", "quick-xml", "html5ever", "markup5ever",
    "pulldown-cmark", "comrak", "yaml-rust", "toml", "serde_yaml", "json5"
]
documents-core = ["pdf-extract", "docx-rs", "calamine", "csv"]  # Essential document formats
# OCR features
ocr = ["tesseract", "leptess"]  # OCR support (requires system dependencies)
ocr-advanced = ["ocr", "tesseract", "leptess"]  # Enhanced OCR with multiple engines

# Image processing features  
images = ["imageproc", "fast_image_resize", "webp", "rexif"]
images-core = []  # Basic image metadata without EXIF (kamadak-exif removed)
vision = []  # Vision AI features (implemented via Ollama)

# Archive processing features
archives = ["zip", "tar", "flate2", "bzip2", "xz2", "sevenz-rust"]
archives-core = ["zip", "tar", "flate2"]  # Essential archive formats
archives-full = ["archives", "unrar"]  # Full archive support including RAR

# Multimedia features
multimedia = ["mp4parse", "id3", "metaflac", "audiotags", "symphonia"]
multimedia-core = ["id3", "audiotags"]  # Essential audio metadata
multimedia-full = ["multimedia", "ffmpeg-next"]  # Full multimedia (requires FFmpeg)

# Large file processing
large-files = ["memmap2", "async-stream", "futures-util"]

# Preset feature combinations
essential = ["documents-core", "images-core", "archives-core", "multimedia-core"]
standard = ["documents", "images", "archives", "multimedia"]
# full = ["documents", "ocr-advanced", "images", "archives-full", "multimedia-full", "large-files"]  # OCR disabled
full = ["documents", "ocr", "images", "archives-full", "multimedia-full", "large-files"]

# System monitoring
sysinfo = []  # System information and monitoring

# Development and analytics
advanced-analytics = []  # Advanced analytics feature flag (for future expansion)

[profile.dev]
incremental = false  # Disable to reduce memory usage
opt-level = 0
codegen-units = 256  # Parallel compilation reduces memory per unit
split-debuginfo = "unpacked"  # Reduce memory for debug info on Windows

[dev-dependencies]
mockito = "1.5"
tempfile = "3.14"
tokio-test = "0.4"
num_cpus = "1.16"
assert_matches = "1.5"
proptest = "1.4"
tauri = { version = "2", features = ["test"] }
# Test dependencies for archive/compression handling
zip = "2.2"
tar = "0.4"
flate2 = "1.0"

# CI test configuration
[profile.ci]
inherits = "dev"
opt-level = 0
codegen-units = 256
lto = false
incremental = false

[profile.release]
panic = "abort"  # Immediate abort prevents resource leaks and info disclosure
codegen-units = 1
lto = true
opt-level = "s"
strip = true
incremental = false
